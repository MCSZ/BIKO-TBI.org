body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
    background: #f9f9f9;
    color: #333;
    margin: 0;
    padding: 20px;
}

header {
    text-align: center;
    margin-bottom: 20px;
}

header h1 {
    font-size: 2em;
    margin-bottom: 10px;
}

main {
    max-width: 800px;
    margin: 0 auto;
}

section {
    margin-bottom: 20px;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 15px;
}

section h2 {
    margin-bottom: 10px;
    color: #0056b3;
}

form label {
    display: block;
    margin-top: 10px;
}

button {
    margin-top: 10px;
    padding: 10px 15px;
    background: #0056b3;
    color: #fff;
    border: none;
    border-radius: 3px;
    cursor: pointer;
}

button:hover {
    background: #004494;
}



JavaScript (script.js)

document.addEventListener('DOMContentLoaded', () => {
    const paperList = document.getElementById('paper-list');
    const resultList = document.getElementById('result-list');
    const queryForm = document.getElementById('query-form');

    // Load papers from JSON
    fetch('papers.json')
        .then(response => response.json())
        .then(data => {
            data.forEach(paper => {
                const li = document.createElement('li');
                li.textContent = paper.metadata['http://www.w3.org/2000/01/rdf-schema#label'] || paper.uri;
                li.onclick = () => displayMetadata(paper);
                paperList.appendChild(li);
            });
        });

    // Display metadata for a selected paper
    const displayMetadata = (paper) => {
        resultList.innerHTML = `
            <li><strong>URI:</strong> ${paper.uri}</li>
            ${Object.entries(paper.metadata)
                .map(([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`)
                .join('')}
        `;
    };

    // Handle query form submission
    queryForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const property = document.getElementById('property').value.toLowerCase();

        // Fetch and filter papers based on the queried property
        fetch('papers.json')
            .then(response => response.json())
            .then(data => {
                const filtered = data.filter(paper => {
                    return Object.keys(paper.metadata).some(key =>
                        key.toLowerCase().includes(property)
                    );
                });

                // Display results
                resultList.innerHTML = filtered
                    .map(
                        paper =>
                            `<li>${paper.metadata['http://www.w3.org/2000/01/rdf-schema#label'] || paper.uri}</li>`
                    )
                    .join('');
            });
    });
});
